@using System.Globalization
@using RelationshipMonitor.BLL.Business_helpers.Concrete
@model IEnumerable<RelationshipMonitor.BOL.Entities.Activity>

@{ UserHelper userHelper = new UserHelper(); }

@{
    ViewBag.Title = "List";
}

<script src="~/Scripts/Chart.js"></script>
<div style="width: 100%" class="canvas">
    <div>
        <canvas height="50" width="600"></canvas>
        <canvas id="canvas" height="150" width="600"></canvas>
    </div>
</div>
@{
    string[] dateArray = new string[Model.Count()];
    string[] estimateArray = new string[Model.Count()];
    int i = 0;
    foreach (var item in Model)
    {

        dateArray[i] = item.Date.ToString("d", System.Globalization.CultureInfo.InvariantCulture);
        estimateArray[i++] = item.Estimate.ToString();
    }
}
<script>

    var dates = @Html.Raw(Json.Encode(dateArray));
    var estimates = @Html.Raw(Json.Encode(estimateArray));

    var lineChartData =
        {
            labels : dates,

            datasets: [
                {
                    label: "Activities",
                    fillColor : "rgba(0,188,140,0.2)",
                    strokeColor : "rgba(0,188,140,1)",
                    pointColor : "rgba(0,188,140,1)",
                    pointStrokeColor : "#fff",
                    pointHighlightFill : "#fff",
                    pointHighlightStroke : "rgba(0,188,140,1)",
                    data : estimates
                }
            ]

        }

    window.onload = function(){
        var ctx = document.getElementById("canvas").getContext("2d");
        window.myLine = new Chart(ctx).Line(lineChartData, {
            responsive: true
        });
    }


</script>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayName("Name")
        </th>
        <th>
            @Html.DisplayName("Surname")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Estimate)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date.Day))
            </td>
            <td>
                @Html.DisplayFor(modelItem => userHelper.GetById((int)item.RecipientId).FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => userHelper.GetById((int)item.RecipientId).LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estimate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ActivityId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ActivityId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ActivityId })
            </td>
        </tr>
    }

</table>
