@model IEnumerable<RelationshipMonitor.BOL.Entities.Event>

@{
    ViewBag.Title = "List";
}

<script src="~/Scripts/Chart.js"></script>
<div style="width: 100%" class="canvas">
    <div>
        <canvas height="50" width="600"></canvas>
        <canvas id="canvas" height="150" width="600"></canvas>
    </div>
</div>
@{
    string[] dateArray = new string[Model.Count()];
    string[] estimateArray = new string[Model.Count()];
    int i = 0;
    foreach (var item in Model)
    {
        dateArray[i] = item.Date.ToString("d", System.Globalization.CultureInfo.InvariantCulture);
        estimateArray[i++] = item.Estimate.ToString();
    }
}
<script>

    var dates = @Html.Raw(Json.Encode(dateArray));
    var estimates = @Html.Raw(Json.Encode(estimateArray));

    var lineChartData =
        {
            labels : dates,

            datasets: [
                {
                    label: "Activities",
                    fillColor : "rgba(0,188,140,0.2)",
                    strokeColor : "rgba(0,188,140,1)",
                    pointColor : "rgba(0,188,140,1)",
                    pointStrokeColor : "#fff",
                    pointHighlightFill : "#fff",
                    pointHighlightStroke : "rgba(0,188,140,1)",
                    data : estimates
                }
            ]

        }

    window.onload = function(){
        var ctx = document.getElementById("canvas").getContext("2d");
        window.myLine = new Chart(ctx).Line(lineChartData, {
            responsive: true
        });
    }


</script>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Time)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecipientId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Estimate)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Time)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatorId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RecipientId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Estimate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EventId }) |
            @Html.ActionLink("Details", "Details", new { id=item.EventId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EventId })
        </td>
    </tr>
}

</table>
